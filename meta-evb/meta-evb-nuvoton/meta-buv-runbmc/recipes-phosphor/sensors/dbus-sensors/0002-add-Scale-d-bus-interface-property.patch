From 41b55a863b99e1275341adc62ad147cd870ede19 Mon Sep 17 00:00:00 2001
From: YSChu <yschu@nuvoton.com>
Date: Wed, 14 Aug 2019 15:16:12 +0800
Subject: [PATCH 2/2] add "Scale" d-bus interface property

Signed-off-by: YSChu <yschu@nuvoton.com>
---
 include/CPUSensor.hpp   | 3 ++-
 src/ADCSensor.cpp       | 6 ++++--
 src/CPUSensor.cpp       | 1 +
 src/HwmonTempSensor.cpp | 4 +++-
 src/PSUSensor.cpp       | 4 ++++
 5 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/include/CPUSensor.hpp b/include/CPUSensor.hpp
index 8f9cb6e..79528af 100644
--- a/include/CPUSensor.hpp
+++ b/include/CPUSensor.hpp
@@ -26,11 +26,12 @@ class CPUSensor : public Sensor
               const std::string& configuration, int cpuId, bool show,
               double dtsOffset);
     ~CPUSensor();
-    static constexpr unsigned int sensorScaleFactor = 1000;
+    static constexpr unsigned int sensorScaleFactor = 1;
     static constexpr unsigned int sensorPollMs = 1000;
     static constexpr size_t warnAfterErrorCount = 10;
     static constexpr double maxReading = 127;
     static constexpr double minReading = -128;
+    static constexpr double Scale = -3;
     static constexpr const char* labelTcontrol = "Tcontrol";
 
   private:
diff --git a/src/ADCSensor.cpp b/src/ADCSensor.cpp
index 21131b8..35490a3 100644
--- a/src/ADCSensor.cpp
+++ b/src/ADCSensor.cpp
@@ -37,11 +37,12 @@ static constexpr unsigned int sensorPollMs = 500;
 static constexpr size_t warnAfterErrorCount = 10;
 static constexpr unsigned int gpioBridgeEnableMs = 20;
 // scaling factor from hwmon
-static constexpr unsigned int sensorScaleFactor = 1000;
+static constexpr unsigned int sensorScaleFactor = 1;
 
-static constexpr double roundFactor = 10000; // 3 decimal places
+static constexpr double roundFactor = 1;
 static constexpr double maxReading = 20;
 static constexpr double minReading = 0;
+static constexpr double Scale = -3;
 
 ADCSensor::ADCSensor(const std::string& path,
                      sdbusplus::asio::object_server& objectServer,
@@ -64,6 +65,7 @@ ADCSensor::ADCSensor(const std::string& path,
         "xyz.openbmc_project.Sensor.Value");
     sensorInterface->register_property("Unit",
         std::string("xyz.openbmc_project.Sensor.Value.Unit.Volts"));
+    sensorInterface->register_property("Scale", Scale);
     if (thresholds::hasWarningInterface(thresholds))
     {
         thresholdInterfaceWarning = objectServer.add_interface(
diff --git a/src/CPUSensor.cpp b/src/CPUSensor.cpp
index baf6e0d..c2d0ae8 100644
--- a/src/CPUSensor.cpp
+++ b/src/CPUSensor.cpp
@@ -58,6 +58,7 @@ CPUSensor::CPUSensor(const std::string& path, const std::string& objectType,
             "xyz.openbmc_project.Sensor.Value");
         sensorInterface->register_property("Unit",
             std::string("xyz.openbmc_project.Sensor.Value.Unit.DegreesC"));
+        sensorInterface->register_property("Scale", Scale);
         if (thresholds::hasWarningInterface(thresholds))
         {
             thresholdInterfaceWarning = objectServer.add_interface(
diff --git a/src/HwmonTempSensor.cpp b/src/HwmonTempSensor.cpp
index 305f9e1..9ff48f0 100644
--- a/src/HwmonTempSensor.cpp
+++ b/src/HwmonTempSensor.cpp
@@ -31,11 +31,12 @@
 #include <vector>
 
 static constexpr unsigned int sensorPollMs = 500;
-static constexpr unsigned int sensorScaleFactor = 1000;
+static constexpr unsigned int sensorScaleFactor = 1;
 static constexpr size_t warnAfterErrorCount = 10;
 
 static constexpr double maxReading = 127;
 static constexpr double minReading = -128;
+static constexpr double Scale = -3;
 
 HwmonTempSensor::HwmonTempSensor(
     const std::string& path, const std::string& objectType,
@@ -56,6 +57,7 @@ HwmonTempSensor::HwmonTempSensor(
 
     sensorInterface->register_property("Unit",
         std::string("xyz.openbmc_project.Sensor.Value.Unit.DegreesC"));
+    sensorInterface->register_property("Scale", Scale);
     if (thresholds::hasWarningInterface(thresholds))
     {
         thresholdInterfaceWarning = objectServer.add_interface(
diff --git a/src/PSUSensor.cpp b/src/PSUSensor.cpp
index f3739c5..6c53735 100644
--- a/src/PSUSensor.cpp
+++ b/src/PSUSensor.cpp
@@ -74,21 +74,25 @@ PSUSensor::PSUSensor(const std::string& path, const std::string& objectType,
     {
         sensorInterface->register_property("Unit",
             std::string("xyz.openbmc_project.Sensor.Value.Unit.DegreesC"));
+        sensorInterface->register_property("Scale", 0);
     }
     else if (sensorTypeName == "voltage/")
     {
         sensorInterface->register_property("Unit",
             std::string("xyz.openbmc_project.Sensor.Value.Unit.Volts"));
+        sensorInterface->register_property("Scale", 0);
     }
     else if (sensorTypeName == "current/")
     {
         sensorInterface->register_property("Unit",
             std::string("xyz.openbmc_project.Sensor.Value.Unit.Amperes"));
+        sensorInterface->register_property("Scale", 0);
     }
     else if (sensorTypeName == "power/")
     {
         sensorInterface->register_property("Unit",
             std::string("xyz.openbmc_project.Sensor.Value.Unit.Watts"));
+        sensorInterface->register_property("Scale", 0);
     }
     if (thresholds::hasWarningInterface(thresholds))
     {
-- 
2.17.1

